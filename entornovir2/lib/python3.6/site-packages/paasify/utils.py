import os

import yaml
from jinja2 import Environment, PackageLoader, select_autoescape


def read_from_source(filename, source_folder):
    """
    Read the contents of file located in source_folder and return as a string
    """
    file_path = os.path.join(source_folder, filename)
    with open(file_path) as contents:
        return contents.read()


def save_file_to_source(file_contents, filename, source_folder):
    """
    Save a file with filename and file_contents into source_folder
    """
    file_path = os.path.join(source_folder, filename)
    with open(file_path, "w") as file_:
        return file_.write(file_contents)


def get_runtime_contents_as_dict(runtime_yml):
    """
    Parse a string the a runtime.yml contents and return a valid runtime dict
    """
    try:
        runtime = yaml.load(runtime_yml, yaml.SafeLoader)
    except yaml.YAMLError as exc:
        print("Error while parsing YML file:")
        if hasattr(exc, "problem_mark"):
            print("parser says\n" + str(exc.problem_mark) + "\n  " + str(exc.problem))
            raise Yaml2DockerfileException(exc.problem)
        else:
            raise Yaml2DockerfileException("Something went wrong while parsing yml file")

    if not runtime or not isinstance(runtime, dict):
        raise Yaml2DockerfileException("Invalid template")

    flavour = runtime.get("flavour")
    if flavour is None:
        raise Yaml2DockerfileException("'flavour' node not found on runtime file")

    return runtime


def load_j2template(template_file):
    """
    Load a Jinja2 template and return it
    """
    env = Environment(
        loader=PackageLoader("paasify", "templates"),
        autoescape=select_autoescape(["html", "xml"])
    )
    j2template = env.get_template(template_file)
    if not j2template:
        raise Yaml2DockerfileException("Can't get template " + template_file)

    return j2template


class PaasifyException(Exception):
    """
    Represent an Paasify Exception
    Example:
            >>> raise PaasifyException("Error detected")
    """


class Yaml2DockerfileException(PaasifyException):
    """
    Errors when parsing .runtime.yml contents
    when generating a Dockerfile
    """
