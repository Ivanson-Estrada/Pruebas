Metadata-Version: 2.0
Name: sparkutils
Version: 0.2.4
Summary: # Python sparkutils library
Requires-Dist: pyspark (<=2.2.1,>=2.1.2)

## Overview

sparkutils library is a wrapper that gives the sparkutils functionality to pyspark processes.

## Requirements

Internally, sparkutils makes use of the jar library. It is required that the Spark installation contains the jar libray in its classpath, either by copying it to the <SPARK_HOME>/jars directory or through the provision of the jar file using the --jars argument of spark-submit application.

## Usage

This package provides facilities for launching Spark processes with metrics, as implemented by spark-utils package. Any pyspark application interested in launching processes with these features must provide and object implementing the methods specified in class sparkutils.task.PySparkTask:
 
 * `runProcess`: Returns an integer value that summarizes the process result
 * `defineBusinessInfo`: Return a business info object as modelled in `task.py` module
 * `ret_code`: Returns the same code that run process. It is assumed that the process is already finished

when an object implementing these methods is available, The run method provided in sparkutils.sparkutils module can be used. This method requires a single argument which is the implementation of PySparkInitDelegate that will perform the Spark process execution.

An example of using this library is shown below

```
import sparkutils

class SampleTask(PySparkTask):

    def runProcess(self, spark, config):
        ...
        return result_code

    def defineBusinessInfo(self, config):
        ...
        return BusinessInfo(result_code, "","","","","","","")

    def ret_code(self):
        return self.__return_code

task = SampleTask()
sparkutils.run(task)
```

## Developers Information

For developing spark processes through the use of this library, this package provides an script that adds the wrapped sparkutils jar library to the spark submit process. This script shall be used as follows:

```
> sparkutils-submit <your-python-script.py> <arguments>
```

Internally, the `sparkutils-submit` script makes use of the --jars option provided by spark-submit for adding the sparkutils library to the classpath.
Home-page: UNKNOWN
Author: BBVA
Author-email: UNKNOWN
License: UNKNOWN
Description: # Python sparkutils library
        
        ## Overview
        
        sparkutils library is a wrapper that gives the sparkutils functionality to pyspark processes.
        
        ## Requirements
        
        Internally, sparkutils makes use of the jar library. It is required that the Spark installation contains the jar libray in its classpath, either by copying it to the <SPARK_HOME>/jars directory or through the provision of the jar file using the --jars argument of spark-submit application.
        
        ## Usage
        
        This package provides facilities for launching Spark processes with metrics, as implemented by spark-utils package. Any pyspark application interested in launching processes with these features must provide and object implementing the methods specified in class sparkutils.task.PySparkTask:
         
         * `runProcess`: Returns an integer value that summarizes the process result
         * `defineBusinessInfo`: Return a business info object as modelled in `task.py` module
         * `ret_code`: Returns the same code that run process. It is assumed that the process is already finished
        
        when an object implementing these methods is available, The run method provided in sparkutils.sparkutils module can be used. This method requires a single argument which is the implementation of PySparkInitDelegate that will perform the Spark process execution.
        
        An example of using this library is shown below
        
        ```
        import sparkutils
        
        class SampleTask(PySparkTask):
        
            def runProcess(self, spark, config):
                ...
                return result_code
        
            def defineBusinessInfo(self, config):
                ...
                return BusinessInfo(result_code, "","","","","","","")
        
            def ret_code(self):
                return self.__return_code
        
        task = SampleTask()
        sparkutils.run(task)
        ```
        
        ## Developers Information
        
        For developing spark processes through the use of this library, this package provides an script that adds the wrapped sparkutils jar library to the spark submit process. This script shall be used as follows:
        
        ```
        > sparkutils-submit <your-python-script.py> <arguments>
        ```
        
        Internally, the `sparkutils-submit` script makes use of the --jars option provided by spark-submit for adding the sparkutils library to the classpath.
Keywords: sparkutils
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
